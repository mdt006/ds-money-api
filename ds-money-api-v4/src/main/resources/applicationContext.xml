<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
                http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
 
     <!-- 使用外部的配置文件 --> 
    <context:property-placeholder location="classpath:jdbc.properties" />
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
         <property name="url" value="${jdbc.url}"></property>  
         <property name="driverClassName" value="${jdbc.driverClassName}"></property>  
         <property name="username" value="${jdbc.username}"></property>  
         <property name="password" value="${jdbc.password}"></property>
         
         <!-- 用来检测连接是否有效的sql，要求是一个查询语句-->
        <property name="validationQuery" value="select 1" />
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="10" />
          <!-- 最大并发连接数 -->
        <property name="maxActive" value="1000" />
        <property name="testWhileIdle" value="true" />
        <property name="filters" value="config,stat" />
        <property name="connectionProperties" value="config.decrypt=true" />
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
         <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="mapperLocations">
            <list>
                <value>classpath*:com/ds/**/*Mapper.xml</value>
                <value>classpath*:com/ds/**/*Dao.xml</value>
            </list>
        </property>
    </bean>

<!-- 扫描 UserMapper.java   -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    <property name="basePackage" value="com.ds.**.mapper,com.ds.money.dao" />
</bean>

    
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource" />   
    </bean>


    <context:component-scan base-package="com.ds.money">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <tx:annotation-driven proxy-target-class="true"/>
    
    <!-- redis config start-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxActive" value="${redis.maxActive}" />  
        <property name="maxWait" value="${redis.maxWait}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
          
    </bean>  
     <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="hostName" value="${redis.host}" />  
        <property name="port" value="${redis.port}" /> 
        <property name="password" value="${redis.pass}" ></property>
        <property name="database" value="2"></property> 
        <property name="poolConfig" ref="poolConfig"/>  
      </bean>
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean>  
    <!-- redis config end-->
    <bean id="moneyHproseService" class="com.ds.money.service.MoneyHproseService"/>
  <bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="2000" />
		<property name="maxPoolSize" value="4000" />
		<property name="queueCapacity" value="4000" />
		<property name="keepAliveSeconds" value="2000000" />
		<property name="rejectedExecutionHandler">
		<bean class="java.util.concurrent.ThreadPoolExecutor$AbortPolicy" />
		</property>
	</bean>
	
	    <!-- spring 定时任务注解配置 -->
	<task:annotation-driven />
</beans>